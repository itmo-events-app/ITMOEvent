/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.itmo.itmoevent.network.model


import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * 
 *
 * @param id 
 * @param placeId 
 * @param startDate 
 * @param endDate 
 * @param title 
 * @param shortDescription 
 * @param fullDescription 
 * @param format 
 * @param status 
 * @param registrationStart 
 * @param registrationEnd 
 * @param parent 
 * @param participantLimit 
 * @param participantAgeLowest 
 * @param participantAgeHighest 
 * @param preparingStart 
 * @param preparingEnd 
 */
@Serializable

data class EventResponse (

    @SerialName(value = "id")
    val id: kotlin.Int? = null,

    @SerialName(value = "placeId")
    val placeId: kotlin.Int? = null,

    @Contextual @SerialName(value = "startDate")
    val startDate: java.time.OffsetDateTime? = null,

    @Contextual @SerialName(value = "endDate")
    val endDate: java.time.OffsetDateTime? = null,

    @SerialName(value = "title")
    val title: kotlin.String? = null,

    @SerialName(value = "shortDescription")
    val shortDescription: kotlin.String? = null,

    @SerialName(value = "fullDescription")
    val fullDescription: kotlin.String? = null,

    @SerialName(value = "format")
    val format: EventResponse.Format? = null,

    @SerialName(value = "status")
    val status: EventResponse.Status? = null,

    @Contextual @SerialName(value = "registrationStart")
    val registrationStart: java.time.OffsetDateTime? = null,

    @Contextual @SerialName(value = "registrationEnd")
    val registrationEnd: java.time.OffsetDateTime? = null,

    @SerialName(value = "parent")
    val parent: kotlin.Int? = null,

    @SerialName(value = "participantLimit")
    val participantLimit: kotlin.Int? = null,

    @SerialName(value = "participantAgeLowest")
    val participantAgeLowest: kotlin.Int? = null,

    @SerialName(value = "participantAgeHighest")
    val participantAgeHighest: kotlin.Int? = null,

    @Contextual @SerialName(value = "preparingStart")
    val preparingStart: java.time.OffsetDateTime? = null,

    @Contextual @SerialName(value = "preparingEnd")
    val preparingEnd: java.time.OffsetDateTime? = null

) {

    /**
     * 
     *
     * Values: ONLINE,OFFLINE,HYBRID
     */
    @Serializable
    enum class Format(val value: kotlin.String) {
        @SerialName(value = "ONLINE") ONLINE("ONLINE"),
        @SerialName(value = "OFFLINE") OFFLINE("OFFLINE"),
        @SerialName(value = "HYBRID") HYBRID("HYBRID");
    }
    /**
     * 
     *
     * Values: DRAFT,PUBLISHED,COMPLETED,CANCELED
     */
    @Serializable
    enum class Status(val value: kotlin.String) {
        @SerialName(value = "DRAFT") DRAFT("DRAFT"),
        @SerialName(value = "PUBLISHED") PUBLISHED("PUBLISHED"),
        @SerialName(value = "COMPLETED") COMPLETED("COMPLETED"),
        @SerialName(value = "CANCELED") CANCELED("CANCELED");
    }
}

